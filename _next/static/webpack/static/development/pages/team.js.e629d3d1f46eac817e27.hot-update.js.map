{"version":3,"file":"static/webpack/static\\development\\pages\\team.js.e629d3d1f46eac817e27.hot-update.js","sources":["webpack:///./pages/team.js"],"sourcesContent":["import { useRouter } from 'next/router';\r\nimport { useEffect, useState } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { CMS_BASE_URL } from '../common/constants';\r\n\r\nconst Member = ({ name, picture: { url = '' }, title, email, group }) => {\r\n  return (\r\n    <div>\r\n      <img src={CMS_BASE_URL + url} />\r\n      <h3>{name}</h3>\r\n      <h4>{title}</h4>\r\n      <style jsx>\r\n        {`\r\n          div {\r\n            flex: 0 1 300px;\r\n            text-align: center;\r\n          }\r\n          img {\r\n            border-radius: 50%;\r\n            height: 200px;\r\n            width: 200px;\r\n            object-fit: cover;\r\n            object-position: top;\r\n          }\r\n          img,\r\n          h3 {\r\n            margin-bottom: -10px;\r\n          }\r\n          h4 {\r\n            color: #0080c9;\r\n            margin-bottom: 30px;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Group = ({ members = [], title }) => {\r\n  return (\r\n    <div className=\"group\">\r\n      <h1 className=\"group-titles\">{title}</h1>\r\n      <hr />\r\n      <div className=\"group-members\">\r\n        {members.map(member => (\r\n          <Member {...member} />\r\n        ))}\r\n      </div>\r\n      <style jsx>\r\n        {`\r\n          hr {\r\n            width: 80%;\r\n            border-width: 2px;\r\n            border-style: solid;\r\n            border-radius: 2.5px;\r\n            border-color: #0080c9;\r\n            margin-bottom: 75px;\r\n          }\r\n          .group-titles {\r\n            margin-bottom: 2px;\r\n            margin-top: 10px;\r\n          }\r\n          .group {\r\n            margin: 100px auto;\r\n            display: flex;\r\n            flex-flow: column nowrap;\r\n            max-width: 1200px;\r\n          }\r\n          .group-members {\r\n            display: flex;\r\n            flex-flow: row wrap;\r\n            justify-content: center;\r\n          }\r\n          h1 {\r\n            text-align: center;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Page = ({ members = [] }) => {\r\n  const router = useRouter();\r\n  const [groups, setGroups] = useState({});\r\n\r\n  useEffect(() => {\r\n    const newGroups = {\r\n      Board: {\r\n        title: 'The Board',\r\n        description: '...',\r\n        members: [],\r\n      },\r\n      Electrical: {\r\n        title: 'Electrical Team',\r\n        description: '...',\r\n        members: [],\r\n      },\r\n    };\r\n    members.forEach(member => {\r\n      if (member.group in newGroups) {\r\n        newGroups[member.group].members.push(member);\r\n      }\r\n    });\r\n    setGroups(newGroups);\r\n  }, [members]);\r\n\r\n  return (\r\n    <Layout\r\n      url=\"https://www.shifthyperloop.com/team\"\r\n      title=\"Shift Hyperloop | Team\"\r\n    >\r\n      <div className=\"image-container\">\r\n        <img className=\"team-photo\" src=\"/Shift-team-2020.jpg\"></img>\r\n        <h1 className=\"title\">Meet our awesome team!</h1>\r\n      </div>\r\n      <div className=\"page-container\">\r\n        {Object.values(groups).map(group => (\r\n          <Group key={group.title} {...group} />\r\n        ))}\r\n      </div>\r\n      <style jsx global>{`\r\n        body {\r\n          background-image: linear-gradient(45deg, #01020b, #020610);\r\n          background-repeat: no-repeat;\r\n          background-size: cover;\r\n          background-size: 9px 48px;\r\n        }\r\n        h1 {\r\n          font-size: 50px;\r\n        }\r\n\r\n        div {\r\n          position: center;\r\n        }\r\n        .team-photo {\r\n          max-width: 100%;\r\n        }\r\n        .image-container {\r\n          position: relative;\r\n          text-align: center;\r\n          color: white;\r\n          display: inline-flex;\r\n        }\r\n        .image-container::before {\r\n          content: '';\r\n          position: absolute;\r\n          left: 0;\r\n          right: 0;\r\n          top: 0;\r\n          bottom: 0;\r\n          background: linear-gradient(63deg, #fff1 23%, transparent 23%) 1px 0,\r\n            linear-gradient(63deg, transparent 74%, #fff1 78%),\r\n            linear-gradient(\r\n              63deg,\r\n              transparent 34%,\r\n              #fff1 38%,\r\n              #fff1 58%,\r\n              transparent 62%\r\n            ),\r\n            transparent;\r\n          background-size: 10px 48px;\r\n        }\r\n        .title {\r\n          position: absolute;\r\n          bottom: calc(40% - 10px);\r\n          left: 50%;\r\n          transform: translate(-50%, -50%);\r\n          text-shadow: 2px 2px #000;\r\n          overflow: hidden;\r\n          white-space: nowrap;\r\n        }\r\n\r\n        .group-titles {\r\n          text-align: center;\r\n        }\r\n      `}</style>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nPage.getInitialProps = async function() {\r\n  const res = await fetch('https://cms.shifthyperloop.com/teammember2020s');\r\n  const data = await res.json();\r\n\r\n  return {\r\n    members: data.map(member => {\r\n      let picture = {\r\n        url: '/uploads/8ac2288649f74d3b88a87126ebb489dc.jpg',\r\n      };\r\n      if (member.picture !== null) {\r\n        picture = member.picture;\r\n      }\r\n      return {\r\n        name: member.name,\r\n        picture,\r\n        group: member.group,\r\n        title: member.title,\r\n        email: member.email,\r\n      };\r\n    }),\r\n  };\r\n};\r\n\r\nexport default Page;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AA6BA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAJA;AAAA;AAAA;AAwCA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AATA;AAAA;AAAA;AAuEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAKA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAfA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;;;;A","sourceRoot":""}